{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/raphael/Downloads/github/prisma-examples-latest/typescript/rest-nextjs-api-routes-auth/pages/p/[id].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport prisma from '../../lib/prisma';\nimport { useSession } from \"next-auth/client\";\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const post = await prisma.post.findUnique({\n    where: {\n      id: Number(params === null || params === void 0 ? void 0 : params.id) || -1\n    },\n    include: {\n      author: {\n        select: {\n          name: true,\n          email: true\n        }\n      }\n    }\n  });\n  return {\n    props: post\n  };\n};\n\nasync function publishPost(id) {\n  await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: \"PUT\"\n  });\n  await Router.push(\"/\");\n}\n\nasync function deletePost(id) {\n  await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: \"DELETE\"\n  });\n  await Router.push(\"/\");\n}\n\nconst Post = props => {\n  var _session$user, _props$author, _props$author2;\n\n  const [session, loading] = useSession();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Authenticating ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = (session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.email) === ((_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.email);\n  let title = props.title;\n\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-3440979688\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"jsx-3440979688\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-3440979688\",\n        children: [\"By \", (props === null || props === void 0 ? void 0 : (_props$author2 = props.author) === null || _props$author2 === void 0 ? void 0 : _props$author2.name) || \"Unknown author\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), !props.published && userHasValidSession && postBelongsToUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => publishPost(props.id),\n        className: \"jsx-3440979688\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), userHasValidSession && postBelongsToUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deletePost(props.id),\n        className: \"jsx-3440979688\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3440979688\",\n      children: \".page.jsx-3440979688{background:white;padding:2rem;}.actions.jsx-3440979688{margin-top:2rem;}button.jsx-3440979688{background:#ececec;border:0;border-radius:0.125rem;padding:1rem 2rem;}button.jsx-3440979688+button.jsx-3440979688{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYXBoYWVsL0Rvd25sb2Fkcy9naXRodWIvcHJpc21hLWV4YW1wbGVzLWxhdGVzdC90eXBlc2NyaXB0L3Jlc3QtbmV4dGpzLWFwaS1yb3V0ZXMtYXV0aC9wYWdlcy9wL1tpZF0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlFa0IsQUFHNEIsQUFLRCxBQUlHLEFBT0YsZ0JBVm5CLENBTGUsQUFnQmYsRUFQVyxTQUNjLEVBVHpCLHFCQVVvQixrQkFDcEIiLCJmaWxlIjoiL1VzZXJzL3JhcGhhZWwvRG93bmxvYWRzL2dpdGh1Yi9wcmlzbWEtZXhhbXBsZXMtbGF0ZXN0L3R5cGVzY3JpcHQvcmVzdC1uZXh0anMtYXBpLXJvdXRlcy1hdXRoL3BhZ2VzL3AvW2lkXS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBHZXRTZXJ2ZXJTaWRlUHJvcHMgfSBmcm9tIFwibmV4dFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0xheW91dFwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbmltcG9ydCB7IFBvc3RQcm9wcyB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL1Bvc3RcIjtcbmltcG9ydCBwcmlzbWEgZnJvbSAnLi4vLi4vbGliL3ByaXNtYSdcbmltcG9ydCB7IHVzZVNlc3Npb24gfSBmcm9tIFwibmV4dC1hdXRoL2NsaWVudFwiO1xuXG5cbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHM6IEdldFNlcnZlclNpZGVQcm9wcyA9IGFzeW5jICh7IHBhcmFtcyB9KSA9PiB7XG4gIGNvbnN0IHBvc3QgPSBhd2FpdCBwcmlzbWEucG9zdC5maW5kVW5pcXVlKHtcbiAgICB3aGVyZToge1xuICAgICAgaWQ6IE51bWJlcihwYXJhbXM/LmlkKSB8fCAtMSxcbiAgICB9LFxuICAgIGluY2x1ZGU6IHtcbiAgICAgIGF1dGhvcjoge1xuICAgICAgICBzZWxlY3Q6IHsgbmFtZTogdHJ1ZSwgZW1haWw6IHRydWUgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHBvc3QsXG4gIH07XG59O1xuXG5hc3luYyBmdW5jdGlvbiBwdWJsaXNoUG9zdChpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3B1Ymxpc2gvJHtpZH1gLCB7XG4gICAgbWV0aG9kOiBcIlBVVFwiLFxuICB9KTtcbiAgYXdhaXQgUm91dGVyLnB1c2goXCIvXCIpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVBvc3QoaWQ6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0LyR7aWR9YCwge1xuICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgfSk7XG4gIGF3YWl0IFJvdXRlci5wdXNoKFwiL1wiKVxufVxuXG5jb25zdCBQb3N0OiBSZWFjdC5GQzxQb3N0UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtzZXNzaW9uLCBsb2FkaW5nXSA9IHVzZVNlc3Npb24oKTtcbiAgaWYgKGxvYWRpbmcpIHtcbiAgICByZXR1cm4gPGRpdj5BdXRoZW50aWNhdGluZyAuLi48L2Rpdj47XG4gIH1cbiAgY29uc3QgdXNlckhhc1ZhbGlkU2Vzc2lvbiA9IEJvb2xlYW4oc2Vzc2lvbik7XG4gIGNvbnN0IHBvc3RCZWxvbmdzVG9Vc2VyID0gc2Vzc2lvbj8udXNlcj8uZW1haWwgPT09IHByb3BzLmF1dGhvcj8uZW1haWw7XG4gIGxldCB0aXRsZSA9IHByb3BzLnRpdGxlO1xuICBpZiAoIXByb3BzLnB1Ymxpc2hlZCkge1xuICAgIHRpdGxlID0gYCR7dGl0bGV9IChEcmFmdClgO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGgyPnt0aXRsZX08L2gyPlxuICAgICAgICA8cD5CeSB7cHJvcHM/LmF1dGhvcj8ubmFtZSB8fCBcIlVua25vd24gYXV0aG9yXCJ9PC9wPlxuICAgICAgICA8UmVhY3RNYXJrZG93biBzb3VyY2U9e3Byb3BzLmNvbnRlbnR9IC8+XG4gICAgICAgIHshcHJvcHMucHVibGlzaGVkICYmIHVzZXJIYXNWYWxpZFNlc3Npb24gJiYgcG9zdEJlbG9uZ3NUb1VzZXIgJiYgKFxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gcHVibGlzaFBvc3QocHJvcHMuaWQpfT5QdWJsaXNoPC9idXR0b24+XG4gICAgICAgICl9XG4gICAgICAgIHt1c2VySGFzVmFsaWRTZXNzaW9uICYmIHBvc3RCZWxvbmdzVG9Vc2VyICYmIChcbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGRlbGV0ZVBvc3QocHJvcHMuaWQpfT5EZWxldGU8L2J1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucGFnZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgcGFkZGluZzogMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5hY3Rpb25zIHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZWNlY2VjO1xuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjEyNXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24gKyBidXR0b24ge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb3N0O1xuIl19 */\\n/*@ sourceURL=/Users/raphael/Downloads/github/prisma-examples-latest/typescript/rest-nextjs-api-routes-auth/pages/p/[id].tsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/raphael/Downloads/github/prisma-examples-latest/typescript/rest-nextjs-api-routes-auth/pages/p/[id].tsx"],"names":["React","ReactMarkdown","Layout","Router","prisma","useSession","getServerSideProps","params","post","findUnique","where","id","Number","include","author","select","name","email","props","publishPost","fetch","method","push","deletePost","Post","session","loading","userHasValidSession","Boolean","postBelongsToUser","user","title","published","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport { PostProps } from \"../../components/Post\";\nimport prisma from '../../lib/prisma'\nimport { useSession } from \"next-auth/client\";\n\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const post = await prisma.post.findUnique({\n    where: {\n      id: Number(params?.id) || -1,\n    },\n    include: {\n      author: {\n        select: { name: true, email: true },\n      },\n    },\n  });\n  return {\n    props: post,\n  };\n};\n\nasync function publishPost(id: number): Promise<void> {\n  await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: \"PUT\",\n  });\n  await Router.push(\"/\")\n}\n\nasync function deletePost(id: number): Promise<void> {\n  await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: \"DELETE\",\n  });\n  await Router.push(\"/\")\n}\n\nconst Post: React.FC<PostProps> = (props) => {\n  const [session, loading] = useSession();\n  if (loading) {\n    return <div>Authenticating ...</div>;\n  }\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = session?.user?.email === props.author?.email;\n  let title = props.title;\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h2>{title}</h2>\n        <p>By {props?.author?.name || \"Unknown author\"}</p>\n        <ReactMarkdown source={props.content} />\n        {!props.published && userHasValidSession && postBelongsToUser && (\n          <button onClick={() => publishPost(props.id)}>Publish</button>\n        )}\n        {userHasValidSession && postBelongsToUser && (\n          <button onClick={() => deletePost(props.id)}>Delete</button>\n        )}\n      </div>\n      <style jsx>{`\n        .page {\n          background: white;\n          padding: 2rem;\n        }\n\n        .actions {\n          margin-top: 2rem;\n        }\n\n        button {\n          background: #ececec;\n          border: 0;\n          border-radius: 0.125rem;\n          padding: 1rem 2rem;\n        }\n\n        button + button {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}
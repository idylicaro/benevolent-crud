{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/raphael/github/benevolent-crud/src/pages/p/[id].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport prisma from '../../../lib/prisma';\nimport { useSession } from \"next-auth/client\";\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const post = await prisma.post.findUnique({\n    where: {\n      id: Number(params === null || params === void 0 ? void 0 : params.id) || -1\n    },\n    include: {\n      author: {\n        select: {\n          name: true,\n          email: true\n        }\n      }\n    }\n  });\n  return {\n    props: post\n  };\n};\n\nasync function publishPost(id) {\n  await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: \"PUT\"\n  });\n  await Router.push(\"/\");\n}\n\nasync function deletePost(id) {\n  await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: \"DELETE\"\n  });\n  await Router.push(\"/\");\n}\n\nconst Post = props => {\n  var _session$user, _props$author, _props$author2;\n\n  const [session, loading] = useSession();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Authenticating ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = (session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.email) === ((_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.email);\n  let title = props.title;\n\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-3440979688\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"jsx-3440979688\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-3440979688\",\n        children: [\"By \", (props === null || props === void 0 ? void 0 : (_props$author2 = props.author) === null || _props$author2 === void 0 ? void 0 : _props$author2.name) || \"Unknown author\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), !props.published && userHasValidSession && postBelongsToUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => publishPost(props.id),\n        className: \"jsx-3440979688\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), userHasValidSession && postBelongsToUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deletePost(props.id),\n        className: \"jsx-3440979688\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3440979688\",\n      children: \".page.jsx-3440979688{background:white;padding:2rem;}.actions.jsx-3440979688{margin-top:2rem;}button.jsx-3440979688{background:#ececec;border:0;border-radius:0.125rem;padding:1rem 2rem;}button.jsx-3440979688+button.jsx-3440979688{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYXBoYWVsL2dpdGh1Yi9iZW5ldm9sZW50LWNydWQvc3JjL3BhZ2VzL3AvW2lkXS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUVrQixBQUc0QixBQUtELEFBSUcsQUFPRixnQkFWbkIsQ0FMZSxBQWdCZixFQVBXLFNBQ2MsRUFUekIscUJBVW9CLGtCQUNwQiIsImZpbGUiOiIvVXNlcnMvcmFwaGFlbC9naXRodWIvYmVuZXZvbGVudC1jcnVkL3NyYy9wYWdlcy9wL1tpZF0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IExheW91dCBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9MYXlvdXRcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgeyBQb3N0UHJvcHMgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9Qb3N0XCI7XG5pbXBvcnQgcHJpc21hIGZyb20gJy4uLy4uLy4uL2xpYi9wcmlzbWEnO1xuaW1wb3J0IHsgdXNlU2Vzc2lvbiB9IGZyb20gXCJuZXh0LWF1dGgvY2xpZW50XCI7XG5cblxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wczogR2V0U2VydmVyU2lkZVByb3BzID0gYXN5bmMgKHsgcGFyYW1zIH0pID0+IHtcbiAgY29uc3QgcG9zdCA9IGF3YWl0IHByaXNtYS5wb3N0LmZpbmRVbmlxdWUoe1xuICAgIHdoZXJlOiB7XG4gICAgICBpZDogTnVtYmVyKHBhcmFtcz8uaWQpIHx8IC0xLFxuICAgIH0sXG4gICAgaW5jbHVkZToge1xuICAgICAgYXV0aG9yOiB7XG4gICAgICAgIHNlbGVjdDogeyBuYW1lOiB0cnVlLCBlbWFpbDogdHJ1ZSB9LFxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcbiAgcmV0dXJuIHtcbiAgICBwcm9wczogcG9zdCxcbiAgfTtcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIHB1Ymxpc2hQb3N0KGlkOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcHVibGlzaC8ke2lkfWAsIHtcbiAgICBtZXRob2Q6IFwiUFVUXCIsXG4gIH0pO1xuICBhd2FpdCBSb3V0ZXIucHVzaChcIi9cIilcbn1cblxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlUG9zdChpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3QvJHtpZH1gLCB7XG4gICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICB9KTtcbiAgYXdhaXQgUm91dGVyLnB1c2goXCIvXCIpXG59XG5cbmNvbnN0IFBvc3Q6IFJlYWN0LkZDPFBvc3RQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3Nlc3Npb24sIGxvYWRpbmddID0gdXNlU2Vzc2lvbigpO1xuICBpZiAobG9hZGluZykge1xuICAgIHJldHVybiA8ZGl2PkF1dGhlbnRpY2F0aW5nIC4uLjwvZGl2PjtcbiAgfVxuICBjb25zdCB1c2VySGFzVmFsaWRTZXNzaW9uID0gQm9vbGVhbihzZXNzaW9uKTtcbiAgY29uc3QgcG9zdEJlbG9uZ3NUb1VzZXIgPSBzZXNzaW9uPy51c2VyPy5lbWFpbCA9PT0gcHJvcHMuYXV0aG9yPy5lbWFpbDtcbiAgbGV0IHRpdGxlID0gcHJvcHMudGl0bGU7XG4gIGlmICghcHJvcHMucHVibGlzaGVkKSB7XG4gICAgdGl0bGUgPSBgJHt0aXRsZX0gKERyYWZ0KWA7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aDI+e3RpdGxlfTwvaDI+XG4gICAgICAgIDxwPkJ5IHtwcm9wcz8uYXV0aG9yPy5uYW1lIHx8IFwiVW5rbm93biBhdXRob3JcIn08L3A+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cHJvcHMuY29udGVudH0gLz5cbiAgICAgICAgeyFwcm9wcy5wdWJsaXNoZWQgJiYgdXNlckhhc1ZhbGlkU2Vzc2lvbiAmJiBwb3N0QmVsb25nc1RvVXNlciAmJiAoXG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBwdWJsaXNoUG9zdChwcm9wcy5pZCl9PlB1Ymxpc2g8L2J1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgICAge3VzZXJIYXNWYWxpZFNlc3Npb24gJiYgcG9zdEJlbG9uZ3NUb1VzZXIgJiYgKFxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gZGVsZXRlUG9zdChwcm9wcy5pZCl9PkRlbGV0ZTwvYnV0dG9uPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5wYWdlIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFjdGlvbnMge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNlY2VjZWM7XG4gICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMTI1cmVtO1xuICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiArIGJ1dHRvbiB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7XG4iXX0= */\\n/*@ sourceURL=/Users/raphael/github/benevolent-crud/src/pages/p/[id].tsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/raphael/github/benevolent-crud/src/pages/p/[id].tsx"],"names":["React","ReactMarkdown","Layout","Router","prisma","useSession","getServerSideProps","params","post","findUnique","where","id","Number","include","author","select","name","email","props","publishPost","fetch","method","push","deletePost","Post","session","loading","userHasValidSession","Boolean","postBelongsToUser","user","title","published","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1E,QAAMC,IAAI,GAAG,MAAMJ,MAAM,CAACI,IAAP,CAAYC,UAAZ,CAAuB;AACxCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAEC,MAAM,CAACL,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,EAAT,CAAN,IAAsB,CAAC;AADtB,KADiC;AAIxCE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,KAAK,EAAE;AAArB;AADF;AADD;AAJ+B,GAAvB,CAAnB;AAUA,SAAO;AACLC,IAAAA,KAAK,EAAEV;AADF,GAAP;AAGD,CAdM;;AAgBP,eAAeW,WAAf,CAA2BR,EAA3B,EAAsD;AACpD,QAAMS,KAAK,CAAE,qCAAoCT,EAAG,EAAzC,EAA4C;AACrDU,IAAAA,MAAM,EAAE;AAD6C,GAA5C,CAAX;AAGA,QAAMlB,MAAM,CAACmB,IAAP,CAAY,GAAZ,CAAN;AACD;;AAED,eAAeC,UAAf,CAA0BZ,EAA1B,EAAqD;AACnD,QAAMS,KAAK,CAAE,kCAAiCT,EAAG,EAAtC,EAAyC;AAClDU,IAAAA,MAAM,EAAE;AAD0C,GAAzC,CAAX;AAGA,QAAMlB,MAAM,CAACmB,IAAP,CAAY,GAAZ,CAAN;AACD;;AAED,MAAME,IAAyB,GAAIN,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACO,OAAD,EAAUC,OAAV,IAAqBrB,UAAU,EAArC;;AACA,MAAIqB,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMC,mBAAmB,GAAGC,OAAO,CAACH,OAAD,CAAnC;AACA,QAAMI,iBAAiB,GAAG,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEK,IAAT,gEAAeb,KAAf,wBAAyBC,KAAK,CAACJ,MAA/B,kDAAyB,cAAcG,KAAvC,CAA1B;AACA,MAAIc,KAAK,GAAGb,KAAK,CAACa,KAAlB;;AACA,MAAI,CAACb,KAAK,CAACc,SAAX,EAAsB;AACpBD,IAAAA,KAAK,GAAI,GAAEA,KAAM,UAAjB;AACD;;AAED,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA,8BACE;AAAA;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA,0BAAO,CAAAb,KAAK,SAAL,IAAAA,KAAK,WAAL,8BAAAA,KAAK,CAAEJ,MAAP,kEAAeE,IAAf,KAAuB,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEE,KAAK,CAACe;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,CAACf,KAAK,CAACc,SAAP,IAAoBL,mBAApB,IAA2CE,iBAA3C,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAMV,WAAW,CAACD,KAAK,CAACP,EAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAOGgB,mBAAmB,IAAIE,iBAAvB,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAMN,UAAU,CAACL,KAAK,CAACP,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAhDD;;AAkDA,eAAea,IAAf","sourcesContent":["import React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport { PostProps } from \"../../components/Post\";\nimport prisma from '../../../lib/prisma';\nimport { useSession } from \"next-auth/client\";\n\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const post = await prisma.post.findUnique({\n    where: {\n      id: Number(params?.id) || -1,\n    },\n    include: {\n      author: {\n        select: { name: true, email: true },\n      },\n    },\n  });\n  return {\n    props: post,\n  };\n};\n\nasync function publishPost(id: number): Promise<void> {\n  await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: \"PUT\",\n  });\n  await Router.push(\"/\")\n}\n\nasync function deletePost(id: number): Promise<void> {\n  await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: \"DELETE\",\n  });\n  await Router.push(\"/\")\n}\n\nconst Post: React.FC<PostProps> = (props) => {\n  const [session, loading] = useSession();\n  if (loading) {\n    return <div>Authenticating ...</div>;\n  }\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = session?.user?.email === props.author?.email;\n  let title = props.title;\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h2>{title}</h2>\n        <p>By {props?.author?.name || \"Unknown author\"}</p>\n        <ReactMarkdown source={props.content} />\n        {!props.published && userHasValidSession && postBelongsToUser && (\n          <button onClick={() => publishPost(props.id)}>Publish</button>\n        )}\n        {userHasValidSession && postBelongsToUser && (\n          <button onClick={() => deletePost(props.id)}>Delete</button>\n        )}\n      </div>\n      <style jsx>{`\n        .page {\n          background: white;\n          padding: 2rem;\n        }\n\n        .actions {\n          margin-top: 2rem;\n        }\n\n        button {\n          background: #ececec;\n          border: 0;\n          border-radius: 0.125rem;\n          padding: 1rem 2rem;\n        }\n\n        button + button {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}
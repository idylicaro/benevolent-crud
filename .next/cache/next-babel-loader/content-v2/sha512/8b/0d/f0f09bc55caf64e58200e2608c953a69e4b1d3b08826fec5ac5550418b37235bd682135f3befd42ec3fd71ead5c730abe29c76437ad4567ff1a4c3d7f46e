{"ast":null,"code":"import { PrismaClient } from \"@prisma/client\"; // PrismaClient is attached to the `global` object in development to prevent\n// exhausting your database connection limit.\n//\n// Learn more: \n// https://pris.ly/d/help/next-js-best-practices\n\nlet prisma;\n\nif (false) {\n  prisma = new PrismaClient();\n} else {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient();\n  }\n\n  prisma = global.prisma;\n}\n\nexport default prisma;","map":{"version":3,"sources":["/Users/raphael/github/benevolent-crud/lib/prisma.ts"],"names":["PrismaClient","prisma","global"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAJ;;AAEA,WAA2C;AACzCA,EAAAA,MAAM,GAAG,IAAID,YAAJ,EAAT;AACD,CAFD,MAEO;AACL,MAAI,CAACE,MAAM,CAACD,MAAZ,EAAoB;AAClBC,IAAAA,MAAM,CAACD,MAAP,GAAgB,IAAID,YAAJ,EAAhB;AACD;;AACDC,EAAAA,MAAM,GAAGC,MAAM,CAACD,MAAhB;AACD;;AACD,eAAeA,MAAf","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\n// PrismaClient is attached to the `global` object in development to prevent\n// exhausting your database connection limit.\n//\n// Learn more: \n// https://pris.ly/d/help/next-js-best-practices\n\nlet prisma: PrismaClient\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n} else {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient()\n  }\n  prisma = global.prisma\n}\nexport default prisma"]},"metadata":{},"sourceType":"module"}
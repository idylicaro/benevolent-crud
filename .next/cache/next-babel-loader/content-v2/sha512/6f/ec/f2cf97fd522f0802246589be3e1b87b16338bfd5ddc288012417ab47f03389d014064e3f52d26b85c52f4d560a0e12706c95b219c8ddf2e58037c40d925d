{"ast":null,"code":"import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport Adapters from \"next-auth/adapters\";\nimport prisma from '../../../lib/prisma';\n\nconst authHandler = (req, res) => NextAuth(req, res, options);\n\nexport default authHandler;\nconst options = {\n  providers: [Providers.GitHub({\n    clientId: process.env.GITHUB_ID,\n    clientSecret: process.env.GITHUB_SECRET\n  }), Providers.Email({\n    server: {\n      host: process.env.SMTP_HOST,\n      port: Number(process.env.SMTP_PORT),\n      auth: {\n        user: process.env.SMTP_USER,\n        pass: process.env.SMTP_PASSWORD\n      }\n    },\n    from: process.env.SMTP_FROM\n  })],\n  adapter: Adapters.Prisma.Adapter({\n    prisma\n  }),\n  secret: process.env.SECRET\n};","map":{"version":3,"sources":["/Users/raphael/Downloads/github/prisma-examples-latest/typescript/rest-nextjs-api-routes-auth/pages/api/auth/[...nextauth].ts"],"names":["NextAuth","Providers","Adapters","prisma","authHandler","req","res","options","providers","GitHub","clientId","process","env","GITHUB_ID","clientSecret","GITHUB_SECRET","Email","server","host","SMTP_HOST","port","Number","SMTP_PORT","auth","user","SMTP_USER","pass","SMTP_PASSWORD","from","SMTP_FROM","adapter","Prisma","Adapter","secret","SECRET"],"mappings":"AACA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,WAA2B,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcN,QAAQ,CAACK,GAAD,EAAMC,GAAN,EAAWC,OAAX,CAA1D;;AACA,eAAeH,WAAf;AAEA,MAAMG,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,CACTP,SAAS,CAACQ,MAAV,CAAiB;AACfC,IAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADP;AAEfC,IAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFX,GAAjB,CADS,EAKTd,SAAS,CAACe,KAAV,CAAgB;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEP,OAAO,CAACC,GAAR,CAAYO,SADZ;AAENC,MAAAA,IAAI,EAAEC,MAAM,CAACV,OAAO,CAACC,GAAR,CAAYU,SAAb,CAFN;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEb,OAAO,CAACC,GAAR,CAAYa,SADd;AAEJC,QAAAA,IAAI,EAAEf,OAAO,CAACC,GAAR,CAAYe;AAFd;AAHA,KADM;AASdC,IAAAA,IAAI,EAAEjB,OAAO,CAACC,GAAR,CAAYiB;AATJ,GAAhB,CALS,CADG;AAkBdC,EAAAA,OAAO,EAAE5B,QAAQ,CAAC6B,MAAT,CAAgBC,OAAhB,CAAwB;AAAE7B,IAAAA;AAAF,GAAxB,CAlBK;AAmBd8B,EAAAA,MAAM,EAAEtB,OAAO,CAACC,GAAR,CAAYsB;AAnBN,CAAhB","sourcesContent":["import { NextApiHandler } from \"next\";\nimport NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport Adapters from \"next-auth/adapters\";\nimport prisma from '../../../lib/prisma'\n\n\nconst authHandler: NextApiHandler = (req, res) => NextAuth(req, res, options);\nexport default authHandler;\n\nconst options = {\n  providers: [\n    Providers.GitHub({\n      clientId: process.env.GITHUB_ID,\n      clientSecret: process.env.GITHUB_SECRET,\n    }),\n    Providers.Email({\n      server: {\n        host: process.env.SMTP_HOST,\n        port: Number(process.env.SMTP_PORT),\n        auth: {\n          user: process.env.SMTP_USER,\n          pass: process.env.SMTP_PASSWORD,\n        },\n      },\n      from: process.env.SMTP_FROM,\n    }),\n  ],\n  adapter: Adapters.Prisma.Adapter({ prisma }),\n  secret: process.env.SECRET,\n};\n"]},"metadata":{},"sourceType":"module"}
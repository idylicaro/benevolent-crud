{"ast":null,"code":"import _regeneratorRuntime from \"/Users/raphael/github/benevolent-crud/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/raphael/github/benevolent-crud/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/raphael/github/benevolent-crud/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/raphael/github/benevolent-crud/src/pages/p/[id].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport { useSession } from \"next-auth/client\";\nimport styles from '../../styles/Draft.module.css';\n\nfunction publishPost(_x) {\n  return _publishPost.apply(this, arguments);\n}\n\nfunction _publishPost() {\n  _publishPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://localhost:3000/api/publish/\".concat(id), {\n              method: \"PUT\"\n            });\n\n          case 2:\n            _context.next = 4;\n            return Router.push(\"/\");\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _publishPost.apply(this, arguments);\n}\n\nfunction deletePost(_x2) {\n  return _deletePost.apply(this, arguments);\n} //const Post: React.FC<PostProps> = (props) => {\n\n\nfunction _deletePost() {\n  _deletePost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"http://localhost:3000/api/post/\".concat(id), {\n              method: \"DELETE\"\n            });\n\n          case 2:\n            _context2.next = 4;\n            return Router.push(\"/\");\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _deletePost.apply(this, arguments);\n}\n\nfunction Post(props) {\n  _s();\n\n  var _session$user, _props$author, _props$author2;\n\n  var _useSession = useSession(),\n      _useSession2 = _slicedToArray(_useSession, 2),\n      session = _useSession2[0],\n      loading = _useSession2[1];\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Autenticando ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  var userHasValidSession = Boolean(session);\n  var postBelongsToUser = (session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.email) === ((_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.email);\n  var title = props.title;\n\n  if (!props.published) {\n    title = \"\".concat(title, \" (Rascunho)\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Escrito por \", (props === null || props === void 0 ? void 0 : (_props$author2 = props.author) === null || _props$author2 === void 0 ? void 0 : _props$author2.name) || \"Unknown author\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), !props.published && userHasValidSession && postBelongsToUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        onClick: function onClick() {\n          return publishPost(props.id);\n        },\n        children: \"Publicar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), userHasValidSession && postBelongsToUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.back,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.submit,\n          onClick: function onClick() {\n            return deletePost(props.id);\n          },\n          children: \"Apagar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"btnbnkOsPYI0mLfZro/2DT47AuA=\", false, function () {\n  return [useSession];\n});\n\n_c = Post;\n;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/raphael/github/benevolent-crud/src/pages/p/[id].tsx"],"names":["React","ReactMarkdown","Layout","Router","useSession","styles","publishPost","id","fetch","method","push","deletePost","Post","props","session","loading","userHasValidSession","Boolean","postBelongsToUser","user","email","author","title","published","name","content","submit","back"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport { PostProps } from \"../../components/Post\";\nimport prisma from '../../../lib/prisma';\nimport { useSession } from \"next-auth/client\";\nimport styles from '../../styles/Draft.module.css';\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const post = await prisma.post.findUnique({\n    where: {\n      id: Number(params?.id) || -1,\n    },\n    include: {\n      author: {\n        select: { name: true, email: true },\n      },\n    },\n  });\n  return {\n    props: post,\n  };\n};\n\nasync function publishPost(id: number): Promise<void> {\n  await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: \"PUT\",\n  });\n  await Router.push(\"/\")\n}\n\nasync function deletePost(id: number): Promise<void> {\n  await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: \"DELETE\",\n  });\n  await Router.push(\"/\")\n}\n\n//const Post: React.FC<PostProps> = (props) => {\nfunction Post(props: PostProps) {\n  const [session, loading] = useSession();\n  if (loading) {\n    return <div>Autenticando ...</div>;\n  }\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = session?.user?.email === props.author?.email;\n  let title = props.title;\n  if (!props.published) {\n    title = `${title} (Rascunho)`;\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h2>{title}</h2>\n        <p>Escrito por {props?.author?.name || \"Unknown author\"}</p>\n        <ReactMarkdown source={props.content} />\n        {!props.published && userHasValidSession && postBelongsToUser && (\n          <button \n            className={styles.submit}  \n            onClick={() => publishPost(props.id)}            \n          >\n            Publicar\n          </button>\n        )}\n        {userHasValidSession && postBelongsToUser && (\n          <div className={styles.back}>\n          <button \n            className={styles.submit}  \n            onClick={() => deletePost(props.id)}\n          >\n            Apagar\n          </button>\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}